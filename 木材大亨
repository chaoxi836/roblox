local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))() 
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))() 
Notification:Notify( 
     {Title = "棠", Description = "作者灵白×搬运工"}, 
     {OutlineColor = Color3.fromRGB(80, 80, 80),Time = 5, Type = "image"}, 
     {Image = "http://www.roblox.com/asset/?id=4483345998", ImageColor = Color3.fromRGB(255, 84, 84)} 
)

local Players = game:GetService("Players")
local lp = Players.LocalPlayer
local mouse = lp:GetMouse()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")

local bai = {
    waterwalk = false,
    awaysday = false,
    awaysdnight = false,
    nofog = false
}

-- 发送通知的函数
function SendNotification(Title, Text, Duration)
    game.StarterGui:SetCore("SendNotification", {
        Title = Title;
        Text = Text;
        Icon = nil;
        Duration = Duration
    })
end

-- 位置数据
local locations = {
    ["出生点"] = CFrame.new(187, 3, 55),
    ["木材反斗城"] = CFrame.new(265, 5, 57),
    ["洞穴"] = CFrame.new(3581, -177, 430),
    ["连接逻辑店"] = CFrame.new(4607, 9, -798),
    ["雪山"] = CFrame.new(1451.66248, 412.208405, 3183.47607),
    ["土地商店"] = CFrame.new(258, 5, -99),
    ["画店"] = CFrame.new(5207, -156, 719),
    ["火木"] = CFrame.new(-1585, 625, 1140),
    ["沙滩"] = CFrame.new(2549, 5, -42),
    ["桥对岸"] = CFrame.new(109, 5, -1166),
    ["会员商店"] = CFrame.new(907, 4, -92),
    ["码头"] = CFrame.new(1122, 1, -203),
    ["黑市"] = CFrame.new(-22, 61, 1377),
    ["糖果原"] = CFrame.new(-561, 272, 2312),
    ["雪地入口"] = CFrame.new(888, 61, 1188),
    ["盖克斯航运"] = CFrame.new(1894, -2, 1581),
    ["玻璃冰木入口"] = CFrame.new(1929, 256, 2918),
    ["云层"] = CFrame.new(2073, 495, 2967),
    ["山边商品"] = CFrame.new(-640, 160, 374),
    ["章鱼哥祭坛"] = CFrame.new(-1622, 196, 941),
    ["沼泽商店"] = CFrame.new(-1274, 133, -1443),
    ["沼泽"] = CFrame.new(-999, 133, -1191),
    ["石头商店"] = CFrame.new(-2387, 302, -1899),
    ["冰胡"] = CFrame.new(-2149, 321, 743),
    ["沙漠"] = CFrame.new(-612, 46, -3169),
    ["辐射商店"] = CFrame.new(172, 12, -2627),
    ["核污染区"] = CFrame.new(207, 15, -2752),
    ["种子商人"] = CFrame.new(-24, 18, -2684),
    ["鲍勃的店"] = CFrame.new(261, 9, -2541),
    ["家具店"] = CFrame.new(492, 4, -1723),
    ["车店"] = CFrame.new(512, 4, -1459),
    ["罗布克斯商店"] = CFrame.new(652, 4, -1589),
    ["肯德坤专卖店"] = CFrame.new(65, 4, -455),
    ["秋季商店"] = CFrame.new(6004, 4, 33)
}

-- 传送功能
local function tp(pos)
    if lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
        if typeof(pos) == "CFrame" then
            lp.Character.HumanoidRootPart.CFrame = pos
        elseif typeof(pos) == "Vector3" then
            lp.Character:MoveTo(pos)
        end
    end
end

-- 环境控制功能
local function UpdateEnvironment()
    if bai.awaysday then
        Lighting.TimeOfDay = "12:00:00"
    end
    
    if bai.nofog then
        Lighting.FogEnd = 1000000
    end
    
    -- 水上行走
    for _, v in pairs(workspace.Water:GetChildren()) do
        if v:IsA("BasePart") then
            v.CanCollide = bai.waterwalk
        end
    end
    for _, v in pairs(workspace.Bridge.VerticalLiftBridge.WaterModel:GetChildren()) do
        if v:IsA("BasePart") then
            v.CanCollide = bai.waterwalk
        end
    end
end

-- 自动更新环境
spawn(function()
    while task.wait(1) do
        UpdateEnvironment()
    end
end)

-- 删除特定物体
local function DeleteSpecificObjects()
    if workspace.Region_Mountainside:FindFirstChild("BoulderRegen") then
        workspace.Region_Mountainside.BoulderRegen.Boulder:Destroy()
    end
    if workspace.Region_Mountainside:FindFirstChild("Door") then
        workspace.Region_Mountainside.Door.Door:Destroy()
    end
end

-- 透明化岩浆和水
local function SetTransparency(objectName, transparency)
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == objectName then
            for _, part in pairs(v:GetChildren()) do
                if part:IsA("BasePart") then
                    part.Transparency = transparency
                end
            end
        end
    end
end

-- 创建现代UI
local bailib = loadstring(game:HttpGet("https://pastebin.com/raw/7xUnUgB3", true))()
local win = bailib:new("棠脚本--木材大亨")
local Tab1 = win:Tab("玩家功能", "10882439086")
local Section3 = Tab1:section("玩家")
local Sectioncs = Tab1:section("传送")
local Sectionqccs = Tab1:section("汽车传送")
local Tab = win:Tab("主要功能", "10728953248")
local Section1 = Tab:section("基地")
local Tab2 = win:Tab("环境", "4626047596")
local Sectionhuanjin = Tab2:section("环境")
local SectionKJ = Tab:section("蓝图")

-- 玩家功能
Section3:Textbox("设置速度", "TextBoxfalg", "输入数字", function(s)
    spawn(function()
        while task.wait() do
            if lp.Character and lp.Character:FindFirstChild("Humanoid") then
                lp.Character.Humanoid.WalkSpeed = tonumber(s) or 16
            end
        end
    end)
end)

Section3:Textbox("设置跳跃", "TextBoxfalg", "输入数字", function(s)
    spawn(function()
        while task.wait() do
            if lp.Character and lp.Character:FindFirstChild("Humanoid") then
                lp.Character.Humanoid.JumpPower = tonumber(s) or 50
            end
        end
    end)
end)

Section3:Textbox("设置高度", "TextBoxfalg", "输入数字", function(s)
    if lp.Character and lp.Character:FindFirstChild("Humanoid") then
        lp.Character.Humanoid.HipHeight = tonumber(s) or 0
    end
end)

Section3:Button("飞行", function()
    loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\40\39\104\116\116\112\115\58\47\47\103\105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\101\111\122\111\110\101\89\84\47\98\102\48\51\55\100\102\102\57\102\48\97\55\48\48\49\55\51\48\52\100\100\100\54\55\102\100\99\100\51\55\48\47\114\97\119\47\101\49\52\101\55\52\102\52\50\53\98\48\54\48\100\102\53\50\51\51\52\51\99\102\51\48\98\55\56\55\48\55\52\101\98\51\99\53\100\50\47\97\114\99\101\117\115\37\50\53\50\48\120\37\50\53\50\48\102\108\121\37\50\53\50\48\50\37\50\53\50\48\111\98\102\108\117\99\97\116\111\114\39\41\44\116\114\117\101\41\41\40\41\10\10")()
end)

-- 传送功能
Sectioncs:Dropdown("传送", "Dropdown", {
    "出生点", "木材反斗城", "回家", "连接逻辑店", "土地商店", "会员商店", "画店", "桥对岸", "沙滩", "火木", "雪山", "洞穴", "码头", "黑市", "糖果原", 
    "雪地入口", "盖克斯航运", "玻璃冰木入口", "云层", "山边商品", "章鱼哥祭坛", "沼泽商店", "石头商店", "沼泽", "冰胡", "沙漠", "辐射商店", 
    "核污染区", "种子商人", "鲍勃的店", "家具店", "车店", "罗布克斯商店", "肯德坤专卖店", "秋季商店"
}, function(b)
    if b == "回家" then
        for _, v in pairs(workspace.Properties:GetChildren()) do
            if v.Owner.Value == lp then
                tp(v.OriginSquare.CFrame + Vector3.new(0, 10, 0))
                SendNotification("传送", "已传送回家", 3)
            end
        end
    elseif locations[b] then
        tp(locations[b])
        SendNotification("传送", "已传送到: " .. b, 3)
    end
end)

-- 汽车传送功能
local Vehicle
function cartp(cframe)
    if lp.Character and lp.Character.Humanoid and lp.Character.Humanoid.SeatPart then
        Vehicle = lp.Character.Humanoid.SeatPart.Parent
        spawn(function()
            for i = 1, 3 do
                task.wait()
                Vehicle:SetPrimaryPartCFrame(cframe)
            end
        end)
    end
end

Sectionqccs:Dropdown("汽车传送", "Dropdown", {
    "出生点", "回家", "木材反斗城", "连接逻辑店", "土地商店", "会员商店", "画店", "桥对岸", "沙滩", "火木", "雪山", "洞穴", "码头", "黑市", "糖果原", 
    "雪地入口", "盖克斯航运", "玻璃冰木入口", "云层", "山边商品", "章鱼哥祭坛", "沼泽商店", "石头商店", "沼泽", "冰胡", "沙漠", "辐射商店", 
    "核污染区", "种子商人", "鲍勃的店", "家具店", "车店", "罗布克斯商店", "肯德坤专卖店", "秋季商店"
}, function(v)
    if v == "回家" then
        for _, prop in pairs(workspace.Properties:GetChildren()) do
            if prop.Owner.Value == lp then
                cartp(prop.OriginSquare.CFrame + Vector3.new(0, 10, 0))
                SendNotification("传送", "汽车已传送回家", 3)
            end
        end
    elseif locations[v] then
        cartp(locations[v])
        SendNotification("传送", "汽车已传送到: " .. v, 3)
    end
end)

-- 基地功能
local function CheckSlotNumber(slot)
    if slot == "1" or slot == "2" or slot == "3" or slot == "4" or slot == "5" or slot == "6" then
        return tonumber(slot)
    else 
        return false
    end
end

local function CheckIfSlotAvailable(slot)
    local metaData = ReplicatedStorage.LoadSaveRequests.GetMetaData:InvokeServer(lp)
    for s, data in pairs(metaData) do
        if s == slot then
            return data.NumSaves ~= 0
        end
    end
    return false
end

Section1:Textbox("加载基地数字", "TextBoxfalg", "输入数字", function(s)
    bai.slot = s
end)

Section1:Button("加载（不保存当前基地）", function()
    local slotNum = CheckSlotNumber(bai.slot)
    if slotNum ~= false then
        if CheckIfSlotAvailable(slotNum) then
            local success = ReplicatedStorage.LoadSaveRequests.RequestLoad:InvokeServer(slotNum)
            if success then
                SendNotification("成功", "已加载基地", 3)
            else
                SendNotification("错误", "现在不能加载", 3)
            end
        else
            SendNotification("错误", "存档不可用", 3)
        end
    else
        SendNotification("错误", "请输入正确的存档号", 3)
    end
end)

Section1:Button("保存", function()
    local slotNum = CheckSlotNumber(bai.slot)
    if slotNum ~= false then
        local success = ReplicatedStorage.LoadSaveRequests.RequestSave:InvokeServer(slotNum)
        if success then
            SendNotification("成功", "已保存基地", 3)
        else
            SendNotification("错误", "保存失败", 3)
结束
    else
        SendNotification("错误", "请输入正确的存档号", 3)
    end
end)

Section1:Button("免费土地", function()
    for _, prop in pairs(workspace.Properties:GetChildren()) do 
        if prop:FindFirstChild("Owner") and prop:FindFirstChild("OriginSquare") and prop.Owner.Value == nil then 
            ReplicatedStorage.PropertyPurchasing.ClientPurchasedProperty:FireServer(prop, prop.OriginSquare.OriginCFrame.Value.p + Vector3.new(0, 3, 0))
            task.wait(0.5)
            for _, v in pairs(workspace.Properties:GetChildren()) do
                if v.Owner.Value == lp then
                    if lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
                        lp.Character.HumanoidRootPart.CFrame = v.OriginSquare.CFrame + Vector3.new(0, 10, 0)
                    end
                end
结束
        end
    end
end)

Section1:Button("最大土地", function()
    local base, square
    for _, prop in pairs(workspace.Properties:GetChildren()) do
        if prop:FindFirstChild("Owner") and prop.Owner.Value == lp then
            base = prop
            square = prop.OriginSquare
        end
    end
    
    if not base or not square then
        SendNotification("错误", "未找到你的基地", 3)
        return
    end
    
    local function makebase(pos)
        ReplicatedStorage.PropertyPurchasing.ClientExpandedProperty:FireServer(base, pos)
    end
    
    local spos = square.Position
    makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z))
    makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z))
    makebase(CFrame.new(spos.X, spos.Y, spos.Z + 40))
    makebase(CFrame.new(spos.X, spos.Y, spos.Z - 40))
    makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z + 40))
    makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z - 40))
    makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z + 40))
    makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z - 40))
    makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z))
    makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z))
    makebase(CFrame.new(spos.X, spos.Y, spos.Z + 80))
    makebase(CFrame.new(spos.X, spos.Y, spos.Z - 80))
    makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z + 80))
    makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z - 80))
    makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z + 80))
    makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z - 80))
    makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z + 80))
    makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z + 80))
    makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z + 40))
    makebase(CFrame.new(spos.X + 80, spos.Y, spos.Z - 40))
    makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z + 40))
    makebase(CFrame.new(spos.X - 80, spos.Y, spos.Z - 40))
    makebase(CFrame.new(spos.X + 40, spos.Y, spos.Z - 80))
    makebase(CFrame.new(spos.X - 40, spos.Y, spos.Z - 80))
    
    SendNotification("成功", "已扩展土地", 3)
end)

-- 环境控制
Sectionhuanjin:Toggle("终日黑天", "Toggleflag", false, function(state)
    bai.awaysdnight = state
    if state then
        spawn(function()
            while bai.awaysdnight do
                Lighting.TimeOfDay = "2:00:00"
                task.wait()
结束
        end)
    end
end)

Sectionhuanjin:Toggle("消除阴影", "Toggleflag", false, function(state)
    Lighting.GlobalShadows = not state
end)

Sectionhuanjin:Button("删除灵视神殿的石头", function()
    if workspace.Region_Mountainside:FindFirstChild("BoulderRegen") then
        workspace.Region_Mountainside.BoulderRegen.Boulder:Destroy()
    end
    if workspace.Region_Mountainside:FindFirstChild("Door") then
        workspace.Region_Mountainside.Door.Door:Destroy()
    end
    SendNotification("成功", "已删除石头", 3)
结束)

Sectionhuanjin:Toggle("删除岩浆", "Toggleflag", false, function(state)
    for _, v in pairs(workspace.Region_Volcano:GetDescendants()) do
        if v.Name == "TouchInterest" then
            v:Destroy()
        elseif v.Name == "Lava" then
            for _, part in pairs(v:GetChildren()) do
                if part:IsA("BasePart") then
                    part.Transparency = state and 1 or 0
                end
结束
结束
如果工作区。Region_Mountainside：查找FirstChild("BoulderRegen")然后
工作区。Region_Mountainside。Boulder再生。Boulder：销毁()

如果工作区。Region_Mountainside：查找FirstChild("Door")然后
工作区。Region_Mountainside。门。门：销毁()
结束
SendNotification("成功"，"已删除石头"，3)
结束
    end
Section Huangjin:Toggle("删除岩浆"，"Toggleflag"，false，function(state)

Sectionhuanjin:Toggle("去除雾", "Toggleflag", false, function(state)
v：销毁()
elseif v.Name=="Lava"则
        spawn(function()
如果零件：Isa(“基础零件”)，则
part.Transparency=状态和1或0
结束
结束
结束)
结束
结束)

Sectionhuanjin:Toggle("删除水"，"Toggleflag”，假，功能(状态)
for_，v成对(workspace.Water:GetChildren())do
如果v.Name=="Water"，则
v。透明度=状态和1或0
v.CanCollide=状态
结束
结束
for_，v成对(工作空间。桥。VerticalLiftBridge。WaterModel:GetChildren())做
section Huangjin:Toggle("去除雾"，"Toggleflag”，假，功能(状态)
bai.nofog=状态
如果说明，则
派生(函数()
当bai.nofog做的时候

-- 树木类型
本地树类型={
"白杨树", "桦树", "无趣", "灌木丛", "糖果", "糖果替代品", "糖果霓虹", "糖果棒绿", "糖果棒红", "卡通风格", "卡通彩虹", "洞穴爬行者", "洞穴",
"樱桃", "鹅卵石", "饼干", "沙", "钻石", "干燥", "干燥霓虹", "电力", "余烬", "冷杉", "霜", "通用", "特殊通用", "玻璃", "发光蘑菇", "金",
"金沼泽"，"草1"，"绿色沼泽"，"洞窟爬行者"，"地狱"，"Koa树"，"孤洞"，"枫树"，"大理石"，"泥泞下水道"，"橡树"，"棕榈树"，"松树"，"罐灌木"，
"土豆"，"Reee"，"灵魂"，"彩虹"，"随机"，"红宝石"，"鳞片"，"污水树"，"闪耀"，"标志"，"银"，"彩虹糖"，"天空"，"雪"，"雪光"，"诡异"，"恐怖僵尸"，
"恐怖霓虹", "石头", "玉米饼", "测试", "线", "隧道爬行者", "霓虹彩虹", "虚拟", "虚空", "火山", "华夫饼", "胡桃", "灰烬", "铜", "狗", "通用主",
"通用秋", "通用死", "大橡树", "岩浆", "冰", "放射性", "通用金", "天体", "星星", "砖替代品", "深色砖", "砖", "裂缝岩浆", "蓝色火焰", "火焰",
"骨头", "彩虹火焰"
}

-- 蓝图功能
SectionKJ：下拉列表("选择树"，"dropdown"，treeTypes，函数(b)
局部树图={
["白杨树"]="白杨"，
["桦树"]="桦木"，
["无趣"]="废话"，
["灌木丛"]="灌木"，
["糖果"]="糖果"，
["糖果替代品"]="糖果替代"，
["糖果霓虹"]="CandyNeon"，
["糖果棒绿"]="CandycaneGreen"，
["糖果棒红"]="CandycaneRed"，
["卡通风格"]="卡通"，
["卡通彩虹"]="卡通彩虹"，
["洞穴爬行者"]="CaveCrawler"，
["洞穴"]="洞穴"，
["樱桃"]="樱桃"，
["鹅卵石"]="鹅卵石"，
["饼干"]="饼干"，
["沙"]="沙子"，
["钻石"]="钻石"，
["干燥"]="干燥"，
["干燥霓虹"]="DryNeon"，
["电力"]="电的"，
["余烬"]="灰烬"，
["冷杉"]="Fir"，
["霜"]="霜"，
["通用"]="泛型"，
["特殊通用"]="GenericSpecial"，
["玻璃"]="玻璃"，
["发光蘑菇"]="Glowshroom"，
["金"]="金"，
["金沼泽"]="GoldSwampy"，
["草1"]="Grass1"，
["绿色沼泽"]="GreenSwampy"，
["洞窟爬行者"]="GrottoCrawler"，
["地狱"]="地狱"，
["Koa树"]="Koa"，
["孤洞"]="孤洞"，
["枫树"]="枫树"，
["大理石"]="大理石"，
["泥泞下水道"]="MuckySewer"，
["橡树"]="橡木"，
["棕榈树"]="手掌"，
["松树"]="松树"，
["罐灌木"]="Potbush”，
["土豆"]="土豆"，
["REEE"]="REEE"，
["灵魂"]="精神"，
["彩虹"]="彩虹"，
["随机"]="随机"，
["红宝石"]="红宝石"，
["鳞片"]="规模"，
["污水树"]="污水树"，
["闪耀"]="闪耀"，
["标志"]="标志"，
["银"]="银"，
makebase(CFrame.new(spos.X-80，spos.Y，spos.Z))
makebase(CFrame.new(spos.X，spos.Y，spos.Z+80))
makebase(CFrame.new(spos.X，spos.Y，spos.Z-80))
makebase(CFrame.new(spos.X+80，spos.Y，spos.Z+80))
makebase(CFrame.new(spos.X+80，spos.Y，spos.Z-80))
makebase(CFrame.new(spos.X-80，spos.Y，spos.Z+80))
makebase(CFrame.new(spos.X-80，spos.Y，spos.Z-80))
makebase(CFrame.new(spos.X+40，spos.Y，spos.Z+80))
makebase(cframe.新(spos.X-40，spos.Y，spos.Z+80))
["测试"]="测试"，
["线"]="线"，
["隧道爬行者"]="TunnelCrawler"，
["霓虹彩虹"]="霓虹"，
["虚拟"]="虚拟的"，
["虚空"]="无效的"，
["火山"]="火山"，
["华夫饼"]="华夫饼"，
["胡桃"]="胡桃"，
["灰烬"]="灰烬"，
["铜"]="铜"，
["狗"]="狗"，
["通用主"]="GenericPrime""，
["通用秋"]="GenericFall"，
["通用死"]="GenericDead""，
["大橡树"]="GreatOak"，
["岩浆"]="岩浆"，
["冰"]="冰"，
["放射性"]="放射性的"，
["通用金"]="GenericGold"，
["天体"]="天上的"，
["星星"]="星"，
["砖替代品"]="BrickAlternative”，
["深色砖"]="BrickDark"，
["砖"]="砖"，
["裂缝岩浆"]="CrackedLava"，
["蓝色火焰"]="蓝色火焰"，
["火焰"]="火焰"，
["骨头"]="骨"，
["彩虹火焰"]="彩虹火焰"
结束
bai.cuttreeselect=树图[b]或"通用"
结束)

KJ节：按钮("获取道具"，功能()
本地工具=Instance.new(“工具”，LP.背包)
tool.RequiresHandle=false
tool.Name="点击一块蓝图"
工具。 已激活：连接(函数()
本地目标=鼠标.目标
如果目标和目标。则
本地str=target.Parent
如果字符串：FindFirstChild("ItemName")，则
ReplicatedStorage。PlaceStructure.ClientPlacedStructure:FireServer(
str.ItemName.Value，
str.PrimaryPart.CFrame，
LP，
Bai.cuttreeselect，
如果slotNum~=false，则
本地成功=ReplicatedStorage.LoadSaveRequests。RequestSave:InvokeServer(slotNum)
                )
SendNotification("成功"，"已保存基地"，3)
其他
SendNotification("错误"，"保存失败"，3)
结束)
其他

结束
